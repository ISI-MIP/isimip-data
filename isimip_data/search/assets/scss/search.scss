@import 'isimip_data/core/assets/scss/colors';
@import 'isimip_data/core/assets/scss/base';

main {
    font-size: 10pt;
    min-height: 1400px;
}

.btn.btn-link {
    vertical-align: baseline;
    font-size: 10pt;
}

.card {
    margin-bottom: 0.5rem;
}

.card-header {
    background-color: white;
    padding: 0.5rem 1.25rem;
}

.card-body,
.list-group-item {
    padding: 0.75rem 1.25rem;
}

.search {
    h1 {
        margin-top: 0;
        text-align: left;
        font-size: 28px;
        color: $color-neutral-dark;
    }

    form {
        margin-bottom: 0;
    }

    button {
        background-color: $color-white;
        border: 1px solid $color-neutral;

        &.btn-outline-primary {
            color: $color-primary;

            &:hover {
                color: $color-white;
                background-color: $color-primary;
            }
        }
    }
}

.tree {
    ul {
        padding: 0;
        margin: 0;
    }
    li {
        padding: 0;
        list-style: none;
    }
    .tree-item {
        cursor: pointer;
        padding: 0.5rem 0.75rem;
        border-top: 1px solid rgba(0, 0, 0, 0.125);

        span {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        &.active {
            color: white;
            background-color: $color-primary;
        }
    }

    // create ul > li > ... > ul > li > .tree-item rules using sass magic
    @for $i from 1 through 20 {
        $selector: if($i == 1, 'ul > li', selector-nest($selector, '> ul > li'));

        #{$selector} > .tree-item {
            padding-left: 0.75rem * $i;
        }
    }

    // remove border from the very first tree-item
    > ul > li:first-child > .tree-item {
        border-top: none;
    }
}

.facets {
    .facet {
        .card-header {
            cursor: pointer;
        }

        .list-group-item {
            padding: 0.5rem 0.75rem 0.5rem 2rem;

            input {
                margin-top: 0.15rem;
            }

            label {
                cursor: pointer;
            }
        }

        .list-group {
            max-height: 200px;
            overflow: auto;
        }

        .facet-check {
            margin-right: 5px;
        }
    }
}

.count {

}

.pagination {
    font-size: small;

    .page-item {
        text-align: center;
        width: 50px;

        &:first-child,
        &:last-child {
            width: 100px;
        }
    }
    .page-item {
        text-align: center;
        width: 50px;

        &.active {
            .page-link {
                background-color: $color-primary;
            }
        }
    }
    .page-link {
        line-height: 1.5;
        color: $color-primary;
    }
}

.params {

}

.selection {

}

.results {
    .result {
        h4 {
            font-size: 1.2rem;
            font-weight: 600;

            margin-bottom: 0.75rem;
            word-break: break-all;
        }

        .badges {
            margin-bottom: 0.5rem;

            span {
                margin-right: 0.25rem;
            }

            a.badge {
                cursor: pointer;
            }
        }

        .result-select {
            color: $color-primary;

            .form-check-input {
                margin-top: 0.2rem;
            }
            .form-check-label {
                font-weight: 600;
                font-size: small;
                cursor: pointer;
                user-select: none;
            }

            label:hover {
                text-decoration: underline;
            }
        }

        .result-file,
        .result-caveat {
            padding-bottom: 0.5rem;

            &:last-child {
                padding-bottom: 0;
            }
        }

        .table {
            margin-bottom: 0;
        }
    }
}

.badges {
    .badge {
        cursor: default;
    }
}
